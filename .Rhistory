letters = c('a','b','c','d')
paste0(letters, letters)
letters = c('a','b','c','d', 'e')
paste(letters, letters)
letters = c('a','b','c','d', 'e')
paste0(letters, c('a','b','c','d', 'e'))
letters = c('a','b','c','d','e')
paste0(letters, rep(c('a','b','c','d','e'),length(letters))
letters = c('a','b','c','d','e')
paste0(letters, rep(c('a','b','c','d','e'),length(letters)))
letters = c('a','b','c','d','e')
paste0(letters, letters,length(letters)))
letters = c('a','b','c','d','e')
paste0(letters, length(letters)))
letters = c('a','b','c','d','e')
paste0(letters, length(letters))
letters = c('a','b','c','d','e')
sapply(letters, paste0(letters, letters))
letters, paste0(letters, letters)
letters = c('a','b','c','d','e')
rep(letters, paste0(letters, letters))
letters = c('a','b','c','d','e')
paste0(letters, rep(letters))
letters = c('a','b','c','d','e')
paste0(rep(letters), rep(letters))
letters = c('a','b','c','d','e')
paste0(rep(letters), rep(letters, each=length(letters)))
compare <- function(w1, w2){
if(nchar(w1)==nchar(w2)){
return("Equal Length")
}else{
return("Not Equal Length")
}
}
compare("EPS568","Summer")
compare("EPS568","SummerA")
data(Cars)
library(plotly)
install.packages('plotly')
library(plotly)
head(cars)
data(cars)
head(cars)
g = ggplot(data = cars, aes(x=speed, y = dist))
g
g = ggplot(data = cars, aes(x=speed, y = dist))
g = ggplot(data = cars, aes(x=speed, y = dist)) + geom_point()
g
g + xlab("Speed (mpg)")
g + xlab("Speed (mpg)") + ylab("Stopping Distance (ft)")
g1
g1 = g + xlab("Speed (mpg)") + ylab("Stopping Distance (ft)")
g1
g = ggplot(data = cars, aes(x=speed, y = dist)) + geom_point(col='red')
g
g = ggplot(data = cars, aes(x=speed, y = dist)) + geom_point(col='red', pch=17)
g
g = ggplot(data = cars, aes(x=speed, y = dist)) + geom_point()
g
g1= ggplot(data = cars, aes(x=speed, y = dist)) + geom_point(col='red', pch=17)
data(faithful)
head(faithful)
g = data(faithful)
#less than 3.2 , greater than or equal to 3.2
str(g)
#less than 3.2 , greater than or equal to 3.2
str(faithful)
faith = data(faithful)
head(faithful)
#less than 3.2 , greater than or equal to 3.2
str(faithful)
str(faith)
str(faith)
str(faith)
faith = data(faithful)
head(faithful)
#less than 3.2 , greater than or equal to 3.2
str(faithful)
str(faith)
str(faith)
faith
faith
#less than 3.2 , greater than or equal to 3.2
str(faith)
fa = faithful %>%
mutate(ifelse(waiting<3.2, short, long)
fa
fa
fa = faithful %>%
mutate(ifelse(waiting<3.2, short, long)
fa
3.2
fa = faithful %>%
mutate(ifelse(waiting<3.2, short, long))
#less than 3.2 , greater than or equal to 3.2
fa = faithful %>%
mutate(ifelse(waiting<3.2, 'short', 'long'))
fa
data(faithful)
head(faithful)
#less than 3.2 , greater than or equal to 3.2
fa = faithful %>%
mutate('length'=ifelse(waiting<3.2, 'short', 'long'))
fa
g <- ggplot(data = faithful, aes(x=length, y=waiting)) %>%
geom_boxplot()
g <- ggplot(data = faithful, aes(x=length, y=waiting)) %>%
geom_boxplot()
g <- ggplot(data = faithful, aes(x=length, y=waiting)) +
geom_boxplot()
g
data(faithful)
head(faithful)
#less than 3.2 , greater than or equal to 3.2
fa = faithful %>%
mutate('length'=ifelse(waiting<3.2, 'short', 'long'))
g <- ggplot(data = faithful, aes(x='length', y='waiting')) +
geom_boxplot()
g
g
data(faithful)
head(faithful)
#less than 3.2 , greater than or equal to 3.2
fa = faithful %>%
mutate('length'=ifelse(waiting<3.2, 'short', 'long'))
g <- ggplot(data = faithful, aes(x=length, y='waiting')) +
geom_boxplot()
g
data(faithful)
head(faithful)
#less than 3.2 , greater than or equal to 3.2
fa = faithful %>%
mutate(length=ifelse(waiting<3.2, 'short', 'long'))
g <- ggplot(data = faithful, aes(x=length, y='waiting')) +
geom_boxplot()
g
g <- ggplot(data = faithful, aes(x=length, y='waiting')) +
geom_boxplot()
g
data(faithful)
head(faithful)
#less than 3.2 , greater than or equal to 3.2
faithful %>%
mutate(length=ifelse(waiting<3.2, 'short', 'long'))
g <- ggplot(data = faithful, aes(x=length, y='waiting')) +
geom_boxplot()
g
g <- ggplot(data = faithful, aes(x='length', y='waiting')) +
geom_boxplot()
g
g <- ggplot(data = faithful, aes(x=length, y='waiting')) +
geom_boxplot()
g
g <- ggplot(data = faithful, aes(x='length', y='waiting')) +
geom_boxplot()
g
2 , greater than or equal to 3.2
data(faithful)
head(faithful)
#less than 3.2 , greater than or equal to 3.2
g <- faithful %>%
mutate(length=ifelse(waiting<3.2, 'short', 'long'))
g <- ggplot(g, aes(x='length', y='waiting')) +
geom_boxplot()
g
data(faithful)
head(faithful)
#less than 3.2 , greater than or equal to 3.2
g <- faithful %>%
mutate(length=ifelse(waiting<3.2, 'short', 'long'))
g1 <- ggplot(g, aes(x='length', y='waiting')) +
geom_boxplot()
g1
str(g)
g1 <- ggplot(data = g, aes(x='length', y='waiting')) +
geom_boxplot()
g1
load(url('https://s3.amazonaws.com/graderdata/Knicks.rda'))
str(data)
head(data)
wins <- ggplot(data = data, aes(x=win))
wins
wins <- ggplot(mapping=data, aes(x=win))
wins
wins
wins <- ggplot(mapping=data, aes(x=win))
head(data)
wins <- ggplot(data = data) +
geom_bar(mapping=aes(x=count(win), y=))
wins
wins
head(data)
wins <- ggplot(data = data) +
geom_bar(mapping=aes(x=win, y=))
wins
wins <- ggplot(data = data) +
geom_bar(mapping=aes(x=year, y=win))
wins
head(data)
wins <- ggplot(data = data) +
geom_bar(mapping=aes(x=season, y=win))
wins
wins <- ggplot(data = data) +
geom_bar(mapping=aes(x=season, y=win))
wins
wins <- ggplot(data = data) +
geom_bar(mapping=aes(x=win))
wins
wins <- ggplot(data = data) +
geom_bar(mapping=aes(x=win))
wins
library("googleVis")
install.packages('googleVis')
demo(googleVis)
library(googleVis)
demo(googleVis)
```{r babyNames}
wins <- ggplot(data = data) +
geom_bar(mapping=aes(x=win, y= ..prop.., group = 1))
wins
wins <- %>%
wins <- ggplot(data = data) +
geom_bar(mapping=aes(x=win, y= ..prop.., group = 1))
wins
g1 <- ggplot(data = g, mappping = aes(x='length', y='waiting')) +
geom_boxplot()
g1
g1 <- ggplot(data = g) +
geom_boxplot(mappping = aes(x='length', y='waiting'))
g1
g1 <- ggplot(data = g) +
geom_boxplot(mapping = aes(x='length', y='waiting'))
g1
g1
geom_boxplot(mapping = aes(x='length', ))
g1 <- ggplot(data = g) +
library(dplyr)
install.packages(gcookbook)
install.packages("tidyverse")
install.packages("gcookbook")
library(gcookbook)
g1
g1 <- ggplot(data = g, aes(x='length')) +
geom_boxplot()
g1
g1 <- ggplot(data = g, aes(x='length', y='waiting')) +
geom_boxplot()
g1
g1 <- ggplot(data = g, interaction('length'), y='waiting')) +
g1 <- ggplot(data = g, interaction('length'), y='waiting') +
geom_boxplot()
data(faithful)
head(faithful)
#less than 3.2 , greater than or equal to 3.2
g <- faithful %>%
mutate(length=ifelse(waiting<3.2, 'short', 'long'))
g1 <- ggplot(data = g, aes(x=interaction('length'), y='waiting') +
geom_boxplot()
g1
g1 <- ggplot(g, aes(x=interaction('length'), y='waiting')) +
geom_boxplot()
g1
head(data)
ggplot(data, aes(x=points)) +
geom_histogram()
g1
g1
library(ggplot2)
library(forcats)
library(plotly)
library(gcookbook)
data(cars)
head(cars)
g = ggplot(data = cars, aes(x=speed, y = dist)) + geom_point()
g
#---2-----------
g1 = g + xlab("Speed (mpg)") + ylab("Stopping Distance (ft)")
g1
#---3-----------
g1= ggplot(data = cars, aes(x=speed, y = dist)) + geom_point(col='red', pch=17)
g1
names = read_csv("./data/names.csv")
names = read_csv("./data/names/names.csv")
names = read_csv("/data/names/names.csv")
names = read_csv("/data/names/names.csv")
devtools::install_github("rstudio/leaflet")
devtools::install_github("rstudio/leaflet")
library(devtools)
names = read_csv("/data/names/names.csv")
#1
install.packages("goolevis")
install.packages("'devtools")
devtools::install_github("rstudio/leaflet")
install.packages("goolevis")
install.packages("'devtools")
library(googlevis)
install.packages("goolevis")
install.packages("'devtools")
library(googlevis)
library(DT)
library(shiny)
library(googleVis)
install.packages('DT')
library(DT)
library(shiny)
library(googleVis)
library(devtools)
library(devtools)
install.packages("'devtools")
install.packages("rtools")
install.packages(path_to_file, repos = NULL, type="source")
install.packages("Rcpp", dependencies = TRUE)
install.packages("Rcpp", dependencies = TRUE)
install.packages("Rcpp", dependencies = TRUE)
install.packages("rtools")
install.packages("rtools")
install.packages("'devtools")
install.packages("Rtools")
install.packages("Rtool")
install.packages('installr')
install.Rtools(choose_version = TRUE, check = FALSE, GUI = TRUE,
page_with_download_url = "https://cran.r-project.org/bin/windows/Rtools/",
...)
install.Rtools(TRUE)
library(installr)
install.Rtools(TRUE)
library(rtools)
library(rtool)
install.devtools()
insta..Devtools
install.devtools
install.devtools()
install.packages('devtools')
install.packages("devtools")
library(devtools)
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
library(devtools)
install.packages("devtools")
?sample
require(devtools)
nstall_github("Displayr/flipPlots")
install_github("Displayr/flipPlots")
remotes::install_github("Displayr/flipPlots")
remotes::install_github("Displayr/flipPlots")
shiny::runApp('E:/SCHOOL/00-nydsa/W1/Shiny-App-DataBreach/shinyapp-databreach-analysis')
p2 <- prc2 %>%
kchart1<-hchart('scatter', hcaes(x = Year, y = Records_Lost, group = State_)) %>%
hc_add_theme(hc_theme_538()) %>%
hc_legend(align = "left", verticalAlign = "top",
layout = "vertical", x = 0, y = 100) %>%
kchart1
prc2 <- prcbreach %>%
group_by(StateActual) %>%
# mutate("Incidents" = n()) %>%
summarise("Incidents" = n() ) %>%
top_n(n=5, Incidents)
arrange(desc(Incidents))
# mutate("I
prc2 <- prcbreach %>%
group_by(StateActual) %>%
# mutate("Incidents" = n()) %>%
summarise("Incidents" = n(), Year = year) %>%
top_n(n=5, Incidents)
arrange(desc(Incidents))
# mutate("Incidents"= n())%>%
#Total Incident Count By State (better for top 5)
prc2 <- prcbreach %>%
group_by(StateActual) %>%
# mutate("Incidents" = n()) %>%
summarise("Incidents" = n(), Year = year) %>%
top_n(n=5, "Incidents")
arrange(desc(Incidents))
prc2 <- prcbreach %>%
group_by(StateActual) %>%
# mutate("Incidents" = n()) %>%
summarise("Incidents" = n(), Year) %>%
top_n(n=5, `Incidents`)
arrange(desc(Incidents))
#Total Incident Count By State (better for top 5)
prc2 <- prcbreach %>%
group_by(StateActual) %>%
# mutate("Incidents" = n()) %>%
summarise("Incidents" = n(), Year) %>%
arrange(desc(Incidents))
prc2 <- prcbreach %>%
group_by(StateActual) %>%
# mutate("Incidents" = n()) %>%
summarise("Incidents" = n(), Year = year) %>%
arrange(desc(Incidents))
#Total Incident Count By State (better for top 5)
prc2 <- prcbreach %>%
group_by(StateActual) %>%
# mutate("Incidents" = n()) %>%
summarise("Incidents" = n(), year) %>%
arrange(desc(Incidents))
#Total Incident Count By State (better for top 5)
prc2 <- prcbreach %>%
group_by(StateActual, year) %>%
# mutate("Incidents" = n()) %>%
summarise("Incidents" = n()) %>%
arrange(desc(Incidents))
View(prc2)
prc2 <- prcbreach %>%
group_by(StateActual, year) %>%
# mutate("Incidents" = n()) %>%
summarise("Incidents" = n()) %>%
arrange(desc(Incidents))
prc2 <- prcbreach %>%
group_by(StateActual) %>%
# mutate("Incidents" = n()) %>%
summarise("Incidents" = n()) %>%
arrange(desc(Incidents))
prc2
prc2 <- prcbreach %>%
group_by(year, StateActual) %>%
# mutate("Incidents" = n()) %>%
summarise("Incidents" = n()) %>%
arrange(desc(Incidents))
#Total Incident Count By State (better for top 5)
prc2 <- prcbreach %>%
group_by(year, StateActual) %>%
# mutate("Incidents" = n()) %>%
summarise(year, "Incidents" = n()) %>%
arrange(desc(Incidents))
View(prc2)
View(prc2)
prc2 <- prcbreach %>%
group_by(year, StateActual) %>%
# mutate("Incidents" = n()) %>%
summarise("Incidents" = n()) %>%
arrange(desc(Incidents))
#Total Incident Count By State (better for top 5)
prc2 <- prcbreach %>%
group_by(StateActual) %>%
# mutate("Incidents" = n()) %>%
summarise(Year = unique(BreachYear), "Incidents" = n()) %>%
arrange(desc(Incidents))
prc2 <- prcbreach %>%
group_by(BreachYear,StateActual) %>%
# mutate("Incidents" = n()) %>%
summarise(Year = unique(BreachYear), "Incidents" = n()) %>%
arrange(desc(Incidents))
prc2 <- prcbreach %>%
group_by(StateActual) %>%
# mutate("Incidents" = n()) %>%
summarise(Year = unique(BreachYear), "Incidents" = n()) %>%
arrange(desc(Incidents))
prc2
#Total Incident Count By State (better for top 5)
prc2 <- prcbreach %>%
group_by(StateActual) %>%
# mutate("Incidents" = n()) %>%
summarise(Year = unique(BreachYear), "Incidents" = n()) %>%
arrange(desc(Incidents)) %>%
top_n(n=10, "Incidents")
prc2 <- prcbreach %>%
group_by(StateActual) %>%
# mutate("Incidents" = n()) %>%
summarise(Year = unique(BreachYear), "Incidents" = n()) %>%
arrange(desc(Incidents)) %>%
top_n(n=10, "Incidents")
prc2 <- prcbreach %>%
group_by(StateActual) %>%
# mutate("Incidents" = n()) %>%
summarise(Year = unique(BreachYear), "Incidents" = n()) %>%
arrange(desc(Incidents)) %>%
top_n(n=10, "Incidents")
prc2
prc2 <- prcbreach %>%
group_by(BreachYear,StateActual) %>%
# mutate("Incidents" = n()) %>%
summarise(Year = unique(BreachYear), "Incidents" = n()) %>%
arrange(desc(Incidents)) %>%
top_n(n=10, "Incidents")
prc2
View(prc2)
View(prc2)
prc2 <- prcbreach %>%
group_by(BreachYear,StateActual) %>%
# mutate("Incidents" = n()) %>%
summarise(Year = unique(BreachYear), "Incidents" = n()) %>%
arrange(desc(Incidents)) %>%
top_n(n=10, "Incidents")
prc2 <- prcbreach %>%
prc2
View(prc2)
prc2 <- prcbreach %>%
group_by(StateActual) %>%
# mutate("Incidents" = n()) %>%
summarise(Year = unique(BreachYear), "Incidents" = n()) %>%
arrange(desc(Incidents)) %>%
top_n(n=10, "Incidents")
#Total Incident Count By State (better for top 5)
prc2 <- prcbreach %>%
group_by(BreachYear,StateActual) %>%
# mutate("Incidents" = n()) %>%
summarise(Year = unique(BreachYear), "Incidents" = n()) %>%
arrange(desc(Incidents)) %>%
top_n(n=10, "Incidents")
prc2
prc2
View(prc2)
runApp('E:/SCHOOL/00-nydsa/W1/Shiny-App-DataBreach/shinyapp-databreach-analysis')
prc2 <- prcbreach %>%
group_by(BreachYear) %>%
# mutate("Incidents" = n()) %>%
summarise("Incidents" = n()) %>%
arrange(desc(Incidents))
prc2
runApp('E:/SCHOOL/00-nydsa/W1/Shiny-App-DataBreach/shinyapp-databreach-analysis')
